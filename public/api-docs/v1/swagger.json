{
  "swagger": "2.0",
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "score",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "localhost:3000"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/scores": {
      "post": {
        "tags": [
          "score"
        ],
        "summary": "Create score",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created score",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newScore"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "score successfully added",
              "type": "object",
              "properties": {
                "id": {"type": "integer", "format": "int32"},
                "player": {"type": "string"},
                "score": {"type": "integer", "format": "int32"},
                "time":{"type": "string", "format": "date-time"}
              }
            }
          },
          "400": {
            "description": "Invalid params"
          },
          "500": {
            "description": "Somthing went wrong"
          }
        }
      },
      "get": {
        "tags": [
          "score"
        ],
        "summary": "Get list of scores",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "player"
          },{
            "in": "query",
            "name": "before"
          },{
            "in": "query",
            "name": "after"
          },{
            "in": "query",
            "name": "page"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "successful operation",
              "type": "object",
              "properties": {
                "player": {"type": "string"},
                "score": {"type": "integer", "format": "int32"},
                "time":{"type": "string", "format": "date-time"}
              }
            }
          },
          "400": {
            "description": "Invalid params"
          },
          "500": {
            "description": "Somthing went wrong"
          }
        }
      }
    },
    "/scores/{id}": {
      "delete": {
        "tags": [
          "score"
        ],
        "summary": "Deletes a score",
        "description": "",
        "operationId": "deleteScore",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "score id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "score not found"
          }
        }
      },
      "get": {
        "tags": [
          "score"
        ],
        "summary": "Find score by ID",
        "description": "-",
        "operationId": "getScoreById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Score not found"
          }
        }
      }
    },
    "/scores/playerscorehistory/{player}/{score}": {
      "get": {
        "tags": [
          "score"
        ],
        "summary": "list of all the scores.",
        "description": "list of all the scores (time and score) of this player.",
        "operationId": "Listofallthescores",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "player",
            "description": "name",
            "required": true
          },
          {
            "in": "path",
            "name": "score",
            "required": true,
            "enum": [ "All", "Top", "Low", "Average"],
            "description": "name"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Score": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "player": {
          "type": "string"
        },
        "score": {
          "type": "integer",
          "format": "int64"
        },
        "time": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Score"
      }
    },
    "newScore": {
      "type": "object",
      "properties": {
        "player": {
          "type": "string"
        },
        "score": {
          "type": "integer",
          "format": "int64"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "newScore"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}